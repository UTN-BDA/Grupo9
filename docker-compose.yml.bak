services:
  frontend:
    build: 
      context: .
      dockerfile: Dockerfile.frontend
    volumes:
      - ./app/frontend/src:/app/frontend/src
      - ./app/frontend/public:/app/frontend/public
    ports:
      - "3000:3000"  # Change to match your ENV PORT
    environment:
      - REACT_APP_API_URL=http://backend:8000
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - PORT=3000
      - HOST=0.0.0.0
    networks:
      - app-network

  backend:
    build: 
      context: .
      dockerfile: Dockerfile.backend    volumes:
      - ./app/backend:/app/backend
      - static_volume:/app/backend/staticfiles
      - media_volume:/app/backend/media
    ports:
      - "8000:8000"
    depends_on:
      - db
    environment:
      DJANGO_SECRET_KEY: "${DJANGO_SECRET_KEY}"
      DEBUG: "1"
      DJANGO_LOGLEVEL: "${DJANGO_LOGLEVEL}"
      DJANGO_ALLOWED_HOSTS: "${DJANGO_ALLOWED_HOSTS}"
      DATABASE_ENGINE: "${DATABASE_ENGINE}"
      DATABASE_NAME: "${DATABASE_NAME}"
      DATABASE_USERNAME: "${DATABASE_USERNAME}"
      DATABASE_PASSWORD: "${DATABASE_PASSWORD}"
      DATABASE_HOST: "${DATABASE_HOST}"
      DATABASE_PORT: "${DATABASE_PORT}"
    env_file:
     - .env
    command: >
      sh -c "cd /app/backend && 
             python manage.py makemigrations --noinput &&
             python manage.py migrate --noinput &&
             python manage.py loaddata /app/backend/fixtures/initial_users.json /app/backend/fixtures/initial_personas.json /app/backend/fixtures/initial_especialidades.json /app/backend/fixtures/initial_medicos.json /app/backend/fixtures/initial_pacientes.json &&
             python manage.py collectstatic --noinput &&
             python manage.py runserver 0.0.0.0:8000"
    networks:
      - app-network

  db:
    image: postgres:17
    restart: always
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    env_file:
      - .env
    networks:
      - app-network

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
      PGADMIN_CONFIG_UPGRADE_CHECK_ENABLED: 'False'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    ports:
      - "8080:80"
    depends_on:
      - db
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  db_data:
  pgadmin_data:
  static_volume:
  media_volume: