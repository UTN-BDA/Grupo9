name: gestor_turnos

services:
  db:
    container_name: db
    image: postgres:15
    restart: on-failure
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: "${DATABASE_USERNAME}"
      POSTGRES_PASSWORD: "${DATABASE_PASSWORD}"
      POSTGRES_DB: "${DATABASE_NAME}"
    env_file:
      - .env

  redis:
    container_name: redis
    image: redis:7-alpine
    restart: on-failure
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --requirepass "${REDIS_PASSWORD}"
    environment:
      REDIS_PASSWORD: "${REDIS_PASSWORD}"
    env_file:
      - .env

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    restart: on-failure
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - db
    environment:
      PGADMIN_DEFAULT_EMAIL: "${PGADMIN_DEFAULT_EMAIL}"
      PGADMIN_DEFAULT_PASSWORD: "${PGADMIN_DEFAULT_PASSWORD}"

  backend:
    container_name: backend
    build:
      context: ./app/backend/
    restart: on-failure
    volumes:

      - ./app/backend:/app/backend 
      - backend_data:/app/backend
      - ./scripts:/app/scripts
      - ./tests:/app/tests
      - backup_data:/app/backups
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    environment:
      DJANGO_SECRET_KEY: "${DJANGO_SECRET_KEY}"
      DEBUG: "${DEBUG}"
      DJANGO_LOGLEVEL: "${DJANGO_LOGLEVEL}"
      DJANGO_ALLOWED_HOSTS: "${DJANGO_ALLOWED_HOSTS}"
      DATABASE_ENGINE: "${DATABASE_ENGINE}"
      DATABASE_NAME: "${DATABASE_NAME}"
      DATABASE_USERNAME: "${DATABASE_USERNAME}"
      DATABASE_PASSWORD: "${DATABASE_PASSWORD}"
      DATABASE_HOST: "${DATABASE_HOST}"
      DATABASE_PORT: "${DATABASE_PORT}"
      REDIS_HOST: "redis"          # Agregar estas variables
      REDIS_PORT: "6379"           # para la conexión a Redis
      REDIS_PASSWORD: "${REDIS_PASSWORD}"


    env_file:
      - .env

    command: python manage.py runserver 0.0.0.0:8000

  frontend:
    container_name: frontend
    build:
      context: ./app/frontend/
    restart: on-failure
    ports:
      - "3000:3000"
    stdin_open: true
    tty: true
    depends_on:
      - backend
  redisinsight:
    container_name: redisinsight
    image: redis/redisinsight:latest
    ports:
      - "5540:5540"  # Podés cambiar el puerto externo si ya está en uso
    restart: on-failure
    depends_on:
      - redis  

volumes:
  db_data:
  pgadmin_data:
  backend_data:
  redis_data:
  backup_data:
